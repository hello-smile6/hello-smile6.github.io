{"version":3,"file":"js/addon-entry-mediarecorder.js","sources":["webpack://GUI/./src/addons/addons/mediarecorder/style.css","webpack://GUI/./src/addons/addons/mediarecorder/_runtime_entry.js","webpack://GUI/./src/addons/addons/mediarecorder/userscript.js","webpack://GUI/./src/addons/libraries/common/cs/download-blob.js"],"sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mediaRecorderPopup {\\n  box-sizing: border-box;\\n  width: 700px;\\n  max-height: min(800px, 80vh);\\n  max-width: 85%;\\n  margin-top: 12vh;\\n  overflow-y: auto;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.mediaRecorderPopup [class*=\\\"modal_header-item-title\\\"] {\\n  margin: 0; /* required because there is no close button */\\n}\\n\\n.mediaRecorderPopupContent {\\n  background-color: white;\\n  padding: 1.5rem 2.25rem;\\n}\\n[theme=\\\"dark\\\"] .mediaRecorderPopupContent {\\n  color: var(--text-primary);\\n  background-color: var(--ui-primary);\\n}\\n\\n.mediaRecorderPopup p {\\n  font-size: 1rem;\\n  margin: 1rem auto;\\n}\\n\\n.mediaRecorderPopup p :last-child {\\n  margin-left: 1rem;\\n}\\n\\n.mediaRecorderPopup[dir=\\\"rtl\\\"] p :last-child {\\n  margin-left: 0;\\n  margin-right: 1rem;\\n}\\n\\n#recordOptionSecondsInput,\\n#recordOptionDelayInput {\\n  width: 6rem;\\n}\\n\\n.mediaRecorderPopupButtons {\\n  margin-top: 1.5rem;\\n}\\n\\n.mediaRecorderPopupButtons button {\\n  margin-left: 0.5rem;\\n}\\n\\n.mediaRecorderPopupButtons button:nth-of-type(1) {\\n  color: black;\\n}\\n\", \"\"]);\n\n// exports\n","/* generated by pull.js */\nimport _import0 from \"./userscript.js\";\nimport _import1 from \"!css-loader!./style.css\";\nexport const resources = {\n  \"userscript.js\": _import0,\n  \"style.css\": _import1,\n};\n","import downloadBlob from \"../../libraries/common/cs/download-blob.js\";\n\nexport default async ({ addon, console, msg }) => {\n  let recordElem;\n  let isRecording = false;\n  let isWaitingForFlag = false;\n  let waitingForFlagFunc = null;\n  let abortController = null;\n  let stopSignFunc = null;\n  let recordBuffer = [];\n  let recorder;\n  let timeout;\n  while (true) {\n    const elem = await addon.tab.waitForElement('div[class*=\"menu-bar_file-group\"] > div:last-child:not(.sa-record)', {\n      markAsSeen: true,\n      reduxEvents: [\"scratch-gui/mode/SET_PLAYER\", \"fontsLoaded/SET_FONTS_LOADED\", \"scratch-gui/locales/SELECT_LOCALE\"],\n    });\n    const getOptions = () => {\n      const recordOption = Object.assign(document.createElement(\"div\"), {\n        className: addon.tab.scratchClass(\"modal_modal-overlay\"),\n      });\n      const recordOptionPopup = Object.assign(document.createElement(\"div\"), {\n        className: addon.tab.scratchClass(\"modal_modal-content\", { others: \"mediaRecorderPopup\" }),\n        dir: addon.tab.direction,\n      });\n      const recordOptionHeader = Object.assign(document.createElement(\"div\"), {\n        className: addon.tab.scratchClass(\"modal_header\"),\n      });\n      recordOptionHeader.appendChild(\n        Object.assign(document.createElement(\"div\"), {\n          className: addon.tab.scratchClass(\"modal_header-item\", \"modal_header-item-title\"),\n          textContent: msg(\"option-title\"),\n        })\n      );\n      recordOptionPopup.appendChild(recordOptionHeader);\n      const recordOptionInner = Object.assign(document.createElement(\"div\"), {\n        className: \"mediaRecorderPopupContent\",\n      });\n\n      recordOptionInner.appendChild(\n        Object.assign(document.createElement(\"p\"), {\n          textContent: msg(\"record-description\"),\n          className: \"recordOptionDescription\",\n        })\n      );\n\n      // Seconds\n      const recordOptionSeconds = document.createElement(\"p\");\n      const recordOptionSecondsInput = Object.assign(document.createElement(\"input\"), {\n        type: \"number\",\n        min: 1,\n        max: 300,\n        defaultValue: 30,\n        id: \"recordOptionSecondsInput\",\n        className: addon.tab.scratchClass(\"prompt_variable-name-text-input\"),\n      });\n      const recordOptionSecondsLabel = Object.assign(document.createElement(\"label\"), {\n        htmlFor: \"recordOptionSecondsInput\",\n        textContent: msg(\"record-duration\"),\n      });\n      recordOptionSeconds.appendChild(recordOptionSecondsLabel);\n      recordOptionSeconds.appendChild(recordOptionSecondsInput);\n      recordOptionInner.appendChild(recordOptionSeconds);\n\n      // Delay\n      const recordOptionDelay = document.createElement(\"p\");\n      const recordOptionDelayInput = Object.assign(document.createElement(\"input\"), {\n        type: \"number\",\n        min: 0,\n        max: 300,\n        defaultValue: 0,\n        id: \"recordOptionDelayInput\",\n        className: addon.tab.scratchClass(\"prompt_variable-name-text-input\"),\n      });\n      const recordOptionDelayLabel = Object.assign(document.createElement(\"label\"), {\n        htmlFor: \"recordOptionDelayInput\",\n        textContent: msg(\"start-delay\"),\n      });\n      recordOptionDelay.appendChild(recordOptionDelayLabel);\n      recordOptionDelay.appendChild(recordOptionDelayInput);\n      recordOptionInner.appendChild(recordOptionDelay);\n\n      // Audio\n      const recordOptionAudio = document.createElement(\"p\");\n      const recordOptionAudioInput = Object.assign(document.createElement(\"input\"), {\n        type: \"checkbox\",\n        defaultChecked: true,\n        id: \"recordOptionAudioInput\",\n      });\n      const recordOptionAudioLabel = Object.assign(document.createElement(\"label\"), {\n        htmlFor: \"recordOptionAudioInput\",\n        textContent: msg(\"record-audio\"),\n        title: msg(\"record-audio-description\"),\n      });\n      recordOptionAudio.appendChild(recordOptionAudioInput);\n      recordOptionAudio.appendChild(recordOptionAudioLabel);\n      recordOptionInner.appendChild(recordOptionAudio);\n\n      // Mic\n      const recordOptionMic = document.createElement(\"p\");\n      const recordOptionMicInput = Object.assign(document.createElement(\"input\"), {\n        type: \"checkbox\",\n        defaultChecked: false,\n        id: \"recordOptionMicInput\",\n      });\n      const recordOptionMicLabel = Object.assign(document.createElement(\"label\"), {\n        htmlFor: \"recordOptionMicInput\",\n        textContent: msg(\"record-mic\"),\n      });\n      recordOptionMic.appendChild(recordOptionMicInput);\n      recordOptionMic.appendChild(recordOptionMicLabel);\n      recordOptionInner.appendChild(recordOptionMic);\n\n      // Green flag\n      const recordOptionFlag = document.createElement(\"p\");\n      const recordOptionFlagInput = Object.assign(document.createElement(\"input\"), {\n        type: \"checkbox\",\n        defaultChecked: true,\n        id: \"recordOptionFlagInput\",\n      });\n      const recordOptionFlagLabel = Object.assign(document.createElement(\"label\"), {\n        htmlFor: \"recordOptionFlagInput\",\n        textContent: msg(\"record-after-flag\"),\n      });\n      recordOptionFlag.appendChild(recordOptionFlagInput);\n      recordOptionFlag.appendChild(recordOptionFlagLabel);\n      recordOptionInner.appendChild(recordOptionFlag);\n\n      // Stop sign\n      const recordOptionStop = document.createElement(\"p\");\n      const recordOptionStopInput = Object.assign(document.createElement(\"input\"), {\n        type: \"checkbox\",\n        defaultChecked: true,\n        id: \"recordOptionStopInput\",\n      });\n      const recordOptionStopLabel = Object.assign(document.createElement(\"label\"), {\n        htmlFor: \"recordOptionStopInput\",\n        textContent: msg(\"record-until-stop\"),\n      });\n      recordOptionFlagInput.addEventListener(\"change\", () => {\n        const disabled = (recordOptionStopInput.disabled = !recordOptionFlagInput.checked);\n        if (disabled) {\n          recordOptionStopLabel.title = msg(\"record-until-stop-disabled\", {\n            afterFlagOption: msg(\"record-after-flag\"),\n          });\n        }\n      });\n      recordOptionStop.appendChild(recordOptionStopInput);\n      recordOptionStop.appendChild(recordOptionStopLabel);\n      recordOptionInner.appendChild(recordOptionStop);\n\n      let resolvePromise = null;\n      const optionPromise = new Promise((resolve) => {\n        resolvePromise = resolve;\n      });\n      let handleOptionClose = null;\n\n      const handleClickOutside = (e) => {\n        if (recordOptionPopup.contains(e.target)) return;\n        handleOptionClose(null);\n      };\n\n      document.body.addEventListener(\"click\", handleClickOutside, {\n        capture: true,\n      });\n\n      handleOptionClose = (value) => {\n        resolvePromise(value);\n        document.body.removeEventListener(\"click\", handleClickOutside, {\n          capture: true,\n        });\n        recordOption.remove();\n      };\n\n      const buttonRow = Object.assign(document.createElement(\"div\"), {\n        className: addon.tab.scratchClass(\"prompt_button-row\", { others: \"mediaRecorderPopupButtons\" }),\n      });\n      const cancelButton = Object.assign(document.createElement(\"button\"), {\n        textContent: msg(\"cancel\"),\n      });\n      cancelButton.addEventListener(\"click\", () => handleOptionClose(null), { once: true });\n      buttonRow.appendChild(cancelButton);\n      const startButton = Object.assign(document.createElement(\"button\"), {\n        textContent: msg(\"start\"),\n        className: addon.tab.scratchClass(\"prompt_ok-button\"),\n      });\n      startButton.addEventListener(\n        \"click\",\n        () =>\n          handleOptionClose({\n            secs: Number(recordOptionSecondsInput.value),\n            delay: Number(recordOptionDelayInput.value),\n            audioEnabled: recordOptionAudioInput.checked,\n            micEnabled: recordOptionMicInput.checked,\n            waitUntilFlag: recordOptionFlagInput.checked,\n            useStopSign: !recordOptionStopInput.disabled && recordOptionStopInput.checked,\n          }),\n        { once: true }\n      );\n      buttonRow.appendChild(startButton);\n      recordOptionInner.appendChild(buttonRow);\n\n      recordOptionPopup.appendChild(recordOptionInner);\n      recordOption.appendChild(recordOptionPopup);\n      document.body.appendChild(recordOption);\n\n      return optionPromise;\n    };\n    const disposeRecorder = () => {\n      isRecording = false;\n      recordElem.textContent = msg(\"record\");\n      recordElem.title = \"\";\n      recorder = null;\n      recordBuffer = [];\n      clearTimeout(timeout);\n      timeout = 0;\n      if (stopSignFunc) {\n        addon.tab.traps.vm.runtime.off(\"PROJECT_STOP_ALL\", stopSignFunc);\n        stopSignFunc = null;\n      }\n    };\n    const stopRecording = (force) => {\n      if (isWaitingForFlag) {\n        addon.tab.traps.vm.runtime.off(\"PROJECT_START\", waitingForFlagFunc);\n        isWaitingForFlag = false;\n        waitingForFlagFunc = null;\n        abortController.abort();\n        abortController = null;\n        disposeRecorder();\n        return;\n      }\n      if (!isRecording || !recorder || recorder.state === \"inactive\") return;\n      if (force) {\n        disposeRecorder();\n      } else {\n        recorder.onstop = () => {\n          const blob = new Blob(recordBuffer, { type: \"video/webm\" });\n          downloadBlob(\"video.webm\", blob);\n          disposeRecorder();\n        };\n        recorder.stop();\n      }\n    };\n    const startRecording = async (opts) => {\n      // Timer\n      const secs = Math.min(300, Math.max(1, opts.secs));\n\n      // Initialize MediaRecorder\n      recordBuffer = [];\n      isRecording = true;\n      const vm = addon.tab.traps.vm;\n      let micStream;\n      if (opts.micEnabled) {\n        // Show permission dialog before green flag is clicked\n        try {\n          micStream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        } catch (e) {\n          if (e.name !== \"NotAllowedError\" && e.name !== \"NotFoundError\") throw e;\n          opts.micEnabled = false;\n        }\n      }\n      if (opts.waitUntilFlag) {\n        isWaitingForFlag = true;\n        Object.assign(recordElem, {\n          textContent: msg(\"click-flag\"),\n          title: msg(\"click-flag-description\"),\n        });\n        abortController = new AbortController();\n        try {\n          await Promise.race([\n            new Promise((resolve) => {\n              waitingForFlagFunc = () => resolve();\n              vm.runtime.once(\"PROJECT_START\", waitingForFlagFunc);\n            }),\n            new Promise((_, reject) => {\n              abortController.signal.addEventListener(\"abort\", () => reject(\"aborted\"), { once: true });\n            }),\n          ]);\n        } catch (e) {\n          if (e.message === \"aborted\") return;\n          throw e;\n        }\n      }\n      isWaitingForFlag = false;\n      waitingForFlagFunc = abortController = null;\n      const stream = new MediaStream();\n      const videoStream = vm.runtime.renderer.canvas.captureStream();\n      stream.addTrack(videoStream.getVideoTracks()[0]);\n\n      const ctx = new AudioContext();\n      const dest = ctx.createMediaStreamDestination();\n      if (opts.audioEnabled) {\n        const mediaStreamDestination = vm.runtime.audioEngine.audioContext.createMediaStreamDestination();\n        vm.runtime.audioEngine.inputNode.connect(mediaStreamDestination);\n        const audioSource = ctx.createMediaStreamSource(mediaStreamDestination.stream);\n        audioSource.connect(dest);\n      }\n      if (opts.micEnabled) {\n        const micSource = ctx.createMediaStreamSource(micStream);\n        micSource.connect(dest);\n      }\n      if (opts.audioEnabled || opts.micEnabled) {\n        stream.addTrack(dest.stream.getAudioTracks()[0]);\n      }\n      recorder = new MediaRecorder(stream, { mimeType: \"video/webm\" });\n      recorder.ondataavailable = (e) => {\n        recordBuffer.push(e.data);\n      };\n      recorder.onerror = (e) => {\n        console.warn(\"Recorder error:\", e.error);\n        stopRecording(true);\n      };\n      timeout = setTimeout(() => stopRecording(false), secs * 1000);\n      if (opts.useStopSign) {\n        stopSignFunc = () => stopRecording();\n        vm.runtime.once(\"PROJECT_STOP_ALL\", stopSignFunc);\n      }\n\n      // Delay\n      const delay = opts.delay || 0;\n      const roundedDelay = Math.floor(delay);\n      for (let index = 0; index < roundedDelay; index++) {\n        recordElem.textContent = msg(\"starting-in\", { secs: roundedDelay - index });\n        await new Promise((resolve) => setTimeout(resolve, 975));\n      }\n      setTimeout(() => {\n        recordElem.textContent = msg(\"stop\");\n\n        recorder.start(1000);\n      }, (delay - roundedDelay) * 1000);\n    };\n    if (!recordElem) {\n      recordElem = Object.assign(document.createElement(\"div\"), {\n        className: \"sa-record \" + elem.className,\n        textContent: msg(\"record\"),\n      });\n      recordElem.addEventListener(\"click\", async () => {\n        if (isRecording) {\n          stopRecording();\n        } else {\n          const opts = await getOptions();\n          if (!opts) {\n            console.log(\"Canceled\");\n            return;\n          }\n          startRecording(opts);\n        }\n      });\n    }\n    elem.parentElement.appendChild(recordElem);\n  }\n};\n","// From https://github.com/LLK/scratch-gui/blob/develop/src/lib/download-blob.js\nexport default (filename, blob) => {\n  const downloadLink = document.createElement(\"a\");\n  document.body.appendChild(downloadLink);\n\n  // Use special ms version if available to get it working on Edge.\n  if (navigator.msSaveOrOpenBlob) {\n    navigator.msSaveOrOpenBlob(blob, filename);\n    return;\n  }\n\n  if (\"download\" in HTMLAnchorElement.prototype) {\n    const url = window.URL.createObjectURL(blob);\n    downloadLink.href = url;\n    downloadLink.download = filename;\n    downloadLink.type = blob.type;\n    downloadLink.click();\n    // remove the link after a timeout to prevent a crash on iOS 13 Safari\n    window.setTimeout(() => {\n      document.body.removeChild(downloadLink);\n      window.URL.revokeObjectURL(url);\n    }, 1000);\n  } else {\n    // iOS 12 Safari, open a new page and set href to data-uri\n    let popup = window.open(\"\", \"_blank\");\n    const reader = new FileReader();\n    reader.onloadend = function () {\n      popup.location.href = reader.result;\n      popup = null;\n    };\n    reader.readAsDataURL(blob);\n  }\n};\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AADA;AAIA;AAEA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;AC/VA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;A","sourceRoot":""}