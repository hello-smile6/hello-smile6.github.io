(window["webpackJsonpGUI"] = window["webpackJsonpGUI"] || []).push([["addon-entry-editor-stepping"],{

/***/ "./src/addons/addons/editor-stepping/_runtime_entry.js":
/*!*************************************************************!*\
  !*** ./src/addons/addons/editor-stepping/_runtime_entry.js ***!
  \*************************************************************/
/*! exports provided: resources */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resources", function() { return resources; });
/* harmony import */ var _userscript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./userscript.js */ "./src/addons/addons/editor-stepping/userscript.js");
/* generated by pull.js */

const resources = {
  "userscript.js": _userscript_js__WEBPACK_IMPORTED_MODULE_0__["default"]
};

/***/ }),

/***/ "./src/addons/addons/editor-stepping/userscript.js":
/*!*********************************************************!*\
  !*** ./src/addons/addons/editor-stepping/userscript.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (async function ({
  addon,
  global,
  console
}) {
  const vm = addon.tab.traps.vm;

  const setColor = () => document.getElementById("editor-stepping-flood").setAttribute("flood-color", addon.settings.get("highlight-color"));

  document.body.insertAdjacentHTML("beforeend", "\n<svg style=\"position: fixed; top: -999999%;\">\n  <filter id=\"colorStackGlow\" height=\"160%\" width=\"180%\" y=\"-30%\" x=\"-40%\">\n    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"4\">\n    </feGaussianBlur>\n\n    <feComponentTransfer result=\"outBlur\">\n      <feFuncA type=\"table\" tableValues=\"0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\">\n      </feFuncA>\n    </feComponentTransfer>\n\n    <feFlood id=\"editor-stepping-flood\" flood-color=\"blue\" flood-opacity=\"1\" result=\"outColor\">\n    </feFlood>\n\n    <feComposite in=\"outColor\" in2=\"outBlur\" operator=\"in\" result=\"outGlow\">\n    </feComposite>\n\n    <feComposite in=\"SourceGraphic\" in2=\"outGlow\" operator=\"over\">\n    </feComposite>\n  </filter>\n</svg>\n");
  setColor(); // Wait for Blockly, as it tends to not be ready sometimes...

  await addon.tab.traps.getBlockly();
  const elementsWithFilter = new Set();
  const oldStep = vm.runtime.constructor.prototype._step;

  vm.runtime.constructor.prototype._step = function (...args) {
    oldStep.call(this, ...args);

    for (const el of elementsWithFilter) {
      el.style.filter = "";
    }

    elementsWithFilter.clear();

    if (!addon.self.disabled) {
      vm.runtime.threads.forEach(thread => {
        if (thread.isCompiled) return;
        if (thread.target.blocks.forceNoGlow) return;
        thread.stack.forEach(blockId => {
          const block = Blockly.getMainWorkspace().getBlockById(blockId);

          if (!block) {
            return;
          }

          const childblock = thread.stack.find(i => {
            let b = block;

            while (b.childBlocks_.length) {
              b = b.childBlocks_[b.childBlocks_.length - 1];
              if (i === b.id) return true;
            }

            return false;
          });

          if (!childblock && block.svgPath_) {
            const svgPath = block.svgPath_;
            svgPath.style.filter = "url(#colorStackGlow)";
            elementsWithFilter.add(svgPath);
          }
        });
      });
    }
  };

  addon.settings.addEventListener("change", setColor);
});

/***/ })

}]);
//# sourceMappingURL=addon-entry-editor-stepping.js.map